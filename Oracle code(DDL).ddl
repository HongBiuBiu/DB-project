-- Generated by Oracle SQL Developer Data Modeler 21.4.1.349.1605
--   at:        2022-04-05 20:32:08 EDT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE zmk_company_location (
    company_id       VARCHAR(30) NOT NULL,
    cpy_street       VARCHAR(30) NOT NULL,
    cpy_city         VARCHAR(30) NOT NULL,
    cpy_state        VARCHAR(30) NOT NULL,
    cpy_zipcode      VARCHAR(10) NOT NULL,
    cpy_phone_number NUMERIC(10) NOT NULL
);

COMMENT ON COLUMN zmk_company_location.company_id IS
    'the unique id of company';

COMMENT ON COLUMN zmk_company_location.cpy_street IS
    'street address of company';

COMMENT ON COLUMN zmk_company_location.cpy_city IS
    'city address of company';

COMMENT ON COLUMN zmk_company_location.cpy_state IS
    'state address of company';

COMMENT ON COLUMN zmk_company_location.cpy_zipcode IS
    'zipcode of company';

COMMENT ON COLUMN zmk_company_location.cpy_phone_number IS
    'phone number of company';

ALTER TABLE zmk_company_location ADD CONSTRAINT zmk_company_location_pk PRIMARY KEY ( company_id );

CREATE TABLE zmk_corporate_coupon (
    coupon_id           VARCHAR(30) NOT NULL,
    discount_percentage NUMERIC(1, 4) NOT NULL
);

COMMENT ON COLUMN zmk_corporate_coupon.coupon_id IS
    'the unique id of coupon';

COMMENT ON COLUMN zmk_corporate_coupon.discount_percentage IS
    'discount percentage of the coupon';

ALTER TABLE zmk_corporate_coupon ADD CONSTRAINT zmk_corporate_coupon_pk PRIMARY KEY ( coupon_id );

CREATE TABLE zmk_corporate_customer (
    customer_id         VARCHAR(30) NOT NULL,
    registration_number VARCHAR(30) NOT NULL,
    coporate_name       VARCHAR(30) NOT NULL,
    employee_id         VARCHAR(30) NOT NULL,
    coporate_account    VARCHAR(30) NOT NULL
);

COMMENT ON COLUMN zmk_corporate_customer.registration_number IS
    'refistration number of corporate';

COMMENT ON COLUMN zmk_corporate_customer.coporate_name IS
    'name of corporate';

COMMENT ON COLUMN zmk_corporate_customer.employee_id IS
    'employee id of the person who represent the corporate';

COMMENT ON COLUMN zmk_corporate_customer.coporate_account IS
    'account  of corporate';

ALTER TABLE zmk_corporate_customer ADD CONSTRAINT zmk_corporate_customer_pk PRIMARY KEY ( customer_id );

CREATE TABLE zmk_coupon (
    coupon_id   VARCHAR(30) NOT NULL,
    coupon_type VARCHAR(1) NOT NULL
);

ALTER TABLE zmk_coupon
    ADD CONSTRAINT ch_inh_zmk_coupon CHECK ( coupon_type IN ( 'C', 'I' ) );

COMMENT ON COLUMN zmk_coupon.coupon_id IS
    'the unique id of coupon';

COMMENT ON COLUMN zmk_coupon.coupon_type IS
    'discriminator';

ALTER TABLE zmk_coupon ADD CONSTRAINT zmk_coupon_pk PRIMARY KEY ( coupon_id );

CREATE TABLE zmk_customer (
    zmk_customer_id  VARCHAR(30) NOT NULL,
    ctr_street       VARCHAR(30) NOT NULL,
    ctr_city         VARCHAR(30) NOT NULL,
    ctr_state        VARCHAR(30) NOT NULL,
    ctr_zipcode      VARCHAR(10) NOT NULL,
    ctr_email        VARCHAR(30) NOT NULL,
    ctr_phone_number NUMERIC(10) NOT NULL,
    customer_type    VARCHAR(1) NOT NULL
);

ALTER TABLE zmk_customer
    ADD CONSTRAINT ch_inh_zmk_customer CHECK ( customer_type IN ( 'C', 'I' ) );

COMMENT ON COLUMN zmk_customer.ctr_street IS
    'street address of customer';

COMMENT ON COLUMN zmk_customer.ctr_city IS
    'city address of customer';

COMMENT ON COLUMN zmk_customer.ctr_state IS
    'state address of customer';

COMMENT ON COLUMN zmk_customer.ctr_zipcode IS
    'zipcod address of customer';

COMMENT ON COLUMN zmk_customer.ctr_email IS
    'email address of customer';

COMMENT ON COLUMN zmk_customer.ctr_phone_number IS
    'phone number of customer';

COMMENT ON COLUMN zmk_customer.customer_type IS
    'discriminator';

ALTER TABLE zmk_customer ADD CONSTRAINT zmk_customer_pk PRIMARY KEY ( zmk_customer_id );

CREATE TABLE zmk_individual_coupon (
    coupon_id           VARCHAR(30) NOT NULL,
    issue_date          DATE NOT NULL,
    expire_date         DATE NOT NULL,
    discount_percentage NUMERIC(1, 4) NOT NULL
);

COMMENT ON COLUMN zmk_individual_coupon.coupon_id IS
    'the unique id of coupon';

COMMENT ON COLUMN zmk_individual_coupon.issue_date IS
    'issue date of the coupon';

COMMENT ON COLUMN zmk_individual_coupon.expire_date IS
    'expire date of the coupon';

COMMENT ON COLUMN zmk_individual_coupon.discount_percentage IS
    'discount percentage of the coupon';

ALTER TABLE zmk_individual_coupon ADD CONSTRAINT zmk_individual_coupon_pk PRIMARY KEY ( coupon_id );

CREATE TABLE zmk_individual_customer (
    customer_id             VARCHAR(30) NOT NULL,
    driving_licence_number  VARCHAR(40) NOT NULL,
    fname                   VARCHAR(20) NOT NULL,
    mname                   VARCHAR(20),
    lname                   VARCHAR(20) NOT NULL,
    insurance_company_name  VARCHAR(30) NOT NULL,
    insurance_policy_number VARCHAR(40) NOT NULL
);

COMMENT ON COLUMN zmk_individual_customer.driving_licence_number IS
    'driving licence number of customer';

COMMENT ON COLUMN zmk_individual_customer.fname IS
    'first name of customer';

COMMENT ON COLUMN zmk_individual_customer.mname IS
    'middle name of customer';

COMMENT ON COLUMN zmk_individual_customer.lname IS
    'last name of customer';

COMMENT ON COLUMN zmk_individual_customer.insurance_company_name IS
    'insurance company name of customer';

COMMENT ON COLUMN zmk_individual_customer.insurance_policy_number IS
    'insurance policy number of customer';

ALTER TABLE zmk_individual_customer ADD CONSTRAINT zmk_individual_customer_pk PRIMARY KEY ( customer_id );

CREATE TABLE zmk_invoice (
    service_id     VARCHAR(30) NOT NULL,
    invoice_date   DATE NOT NULL,
    invoice_amount NUMERIC(7, 2) NOT NULL
);

ALTER TABLE zmk_invoice ADD CONSTRAINT zmk_invoice_pk PRIMARY KEY ( service_id );

CREATE TABLE zmk_payment (
    card_number    NUMERIC(30) NOT NULL,
    payment_method VARCHAR(30) NOT NULL,
    payment_date   DATE NOT NULL,
    service_id     VARCHAR(30) NOT NULL
);

COMMENT ON COLUMN zmk_payment.card_number IS
    'the unique card number';

COMMENT ON COLUMN zmk_payment.payment_method IS
    'credit, debit, etc.';

COMMENT ON COLUMN zmk_payment.payment_date IS
    'the date of the payment';

ALTER TABLE zmk_payment ADD CONSTRAINT zmk_payment_pk PRIMARY KEY ( card_number );

CREATE TABLE zmk_rental_service (
    service_id       VARCHAR(30) NOT NULL,
    pickup_location  VARCHAR(30) NOT NULL,
    dropoff_location VARCHAR(30) NOT NULL,
    pickup_date      DATE NOT NULL,
    dropoff_date     DATE NOT NULL,
    start_odometer   NUMERIC(7, 2) NOT NULL,
    end_odometer     NUMERIC(7, 2) NOT NULL,
    vin              VARCHAR(17),
    company_id       VARCHAR(30) NOT NULL,
    coupon_id        VARCHAR(30),
    customer_id      VARCHAR(30)
);

COMMENT ON COLUMN zmk_rental_service.pickup_location IS
    'location to pick up the car';

COMMENT ON COLUMN zmk_rental_service.dropoff_location IS
    'location to drop off the car';

COMMENT ON COLUMN zmk_rental_service.pickup_date IS
    'date of picking up the car';

COMMENT ON COLUMN zmk_rental_service.dropoff_date IS
    'date of droping off the car';

COMMENT ON COLUMN zmk_rental_service.start_odometer IS
    'odometer number when rent starts';

COMMENT ON COLUMN zmk_rental_service.end_odometer IS
    'odometer number when rent end';

COMMENT ON COLUMN zmk_rental_service.vin IS
    'the unique VIN of car';

COMMENT ON COLUMN zmk_rental_service.company_id IS
    'the unique id of company';

COMMENT ON COLUMN zmk_rental_service.coupon_id IS
    'the unique id of coupon';

ALTER TABLE zmk_rental_service ADD CONSTRAINT zmk_rental_service_pk PRIMARY KEY ( service_id );

CREATE TABLE zmk_vehicle (
    vin                  VARCHAR(17) NOT NULL,
    make                 VARCHAR(30) NOT NULL,
    model                VARCHAR(30) NOT NULL,
    year                 NUMERIC(4) NOT NULL,
    licence_plate_number VARCHAR(30) NOT NULL,
    class_name           VARCHAR(30)
);

COMMENT ON COLUMN zmk_vehicle.vin IS
    'the unique VIN of car';

COMMENT ON COLUMN zmk_vehicle.make IS
    'the brand of car';

COMMENT ON COLUMN zmk_vehicle.model IS
    'the model of car(A,B,C,etc.)';

COMMENT ON COLUMN zmk_vehicle.year IS
    'the birth year of car';

COMMENT ON COLUMN zmk_vehicle.licence_plate_number IS
    'licence plate number of car';

COMMENT ON COLUMN zmk_vehicle.class_name IS
    'name of car class(mini, small,etc.)';

ALTER TABLE zmk_vehicle ADD CONSTRAINT zmk_vehicle_pk PRIMARY KEY ( vin );

CREATE TABLE zmk_vehicle_class (
    class_name       VARCHAR(30) NOT NULL,
    rental_rate      NUMERIC(7, 2) NOT NULL,
    over_mileage_fee NUMERIC(7, 2) NOT NULL,
    odometer_limit   NUMERIC(7, 2) NOT NULL
);

COMMENT ON COLUMN zmk_vehicle_class.class_name IS
    'name of car class(mini, small,etc.)';

COMMENT ON COLUMN zmk_vehicle_class.rental_rate IS
    'For example, a rental car service of a mid-size car
has daily rate of service as $40/day';

COMMENT ON COLUMN zmk_vehicle_class.over_mileage_fee IS
    'fee need to pay if the rent car odometer exceed the limit';

COMMENT ON COLUMN zmk_vehicle_class.odometer_limit IS
    'odometer limit of car';

ALTER TABLE zmk_vehicle_class ADD CONSTRAINT zmk_vehicle_class_pk PRIMARY KEY ( class_name );

ALTER TABLE zmk_corporate_customer
    ADD CONSTRAINT zmk_cc_c_fk FOREIGN KEY ( customer_id )
        REFERENCES zmk_customer ( zmk_customer_id );

ALTER TABLE zmk_corporate_coupon
    ADD CONSTRAINT zmk_cc_c_fkv1 FOREIGN KEY ( coupon_id )
        REFERENCES zmk_coupon ( coupon_id );

ALTER TABLE zmk_invoice
    ADD CONSTRAINT zmk_i_rs_fk FOREIGN KEY ( service_id )
        REFERENCES zmk_rental_service ( service_id );

ALTER TABLE zmk_individual_customer
    ADD CONSTRAINT zmk_ic_c_fk FOREIGN KEY ( customer_id )
        REFERENCES zmk_customer ( zmk_customer_id );

ALTER TABLE zmk_individual_coupon
    ADD CONSTRAINT zmk_ic_c_fkv2 FOREIGN KEY ( coupon_id )
        REFERENCES zmk_coupon ( coupon_id );

ALTER TABLE zmk_payment
    ADD CONSTRAINT zmk_p_i_fk FOREIGN KEY ( service_id )
        REFERENCES zmk_invoice ( service_id );

ALTER TABLE zmk_rental_service
    ADD CONSTRAINT zmk_rs_c_fk FOREIGN KEY ( coupon_id )
        REFERENCES zmk_coupon ( coupon_id );

ALTER TABLE zmk_rental_service
    ADD CONSTRAINT zmk_rs_cl_fk FOREIGN KEY ( company_id )
        REFERENCES zmk_company_location ( company_id );

ALTER TABLE zmk_rental_service
    ADD CONSTRAINT zmk_rs_cu_fk FOREIGN KEY ( customer_id )
        REFERENCES zmk_customer ( zmk_customer_id );

ALTER TABLE zmk_rental_service
    ADD CONSTRAINT zmk_rs_v_fk FOREIGN KEY ( vin )
        REFERENCES zmk_vehicle ( vin );

ALTER TABLE zmk_vehicle
    ADD CONSTRAINT zmk_v_vc_fk FOREIGN KEY ( class_name )
        REFERENCES zmk_vehicle_class ( class_name );

CREATE OR REPLACE TRIGGER arc_fk_zmk_individual_customer BEFORE
    INSERT OR UPDATE OF customer_id ON zmk_individual_customer
    FOR EACH ROW
DECLARE
    d VARCHAR(1);
BEGIN
    SELECT
        a.customer_type
    INTO d
    FROM
        zmk_customer a
    WHERE
        a.zmk_customer_id = :new.customer_id;

    IF ( d IS NULL OR d <> 'I' ) THEN
        raise_application_error(
                               -20223,
                               'FK ZMK_IC_C_FK in Table ZMK_INDIVIDUAL_CUSTOMER violates Arc constraint on Table ZMK_CUSTOMER - discriminator column CUSTOMER_TYPE doesn''t have value ''I'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fka_zmk_corporate_customer BEFORE
    INSERT OR UPDATE OF customer_id ON zmk_corporate_customer
    FOR EACH ROW
DECLARE
    d VARCHAR(1);
BEGIN
    SELECT
        a.customer_type
    INTO d
    FROM
        zmk_customer a
    WHERE
        a.zmk_customer_id = :new.customer_id;

    IF ( d IS NULL OR d <> 'C' ) THEN
        raise_application_error(
                               -20223,
                               'FK ZMK_CC_C_FK in Table ZMK_CORPORATE_CUSTOMER violates Arc constraint on Table ZMK_CUSTOMER - discriminator column CUSTOMER_TYPE doesn''t have value ''C'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkar_zmk_individual_coupon BEFORE
    INSERT OR UPDATE OF coupon_id ON zmk_individual_coupon
    FOR EACH ROW
DECLARE
    d VARCHAR(1);
BEGIN
    SELECT
        a.coupon_type
    INTO d
    FROM
        zmk_coupon a
    WHERE
        a.coupon_id = :new.coupon_id;

    IF ( d IS NULL OR d <> 'I' ) THEN
        raise_application_error(
                               -20223,
                               'FK ZMK_IC_C_FKv2 in Table ZMK_INDIVIDUAL_COUPON violates Arc constraint on Table ZMK_COUPON - discriminator column COUPON_TYPE doesn''t have value ''I'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_zmk_corporate_coupon BEFORE
    INSERT OR UPDATE OF coupon_id ON zmk_corporate_coupon
    FOR EACH ROW
DECLARE
    d VARCHAR(1);
BEGIN
    SELECT
        a.coupon_type
    INTO d
    FROM
        zmk_coupon a
    WHERE
        a.coupon_id = :new.coupon_id;

    IF ( d IS NULL OR d <> 'C' ) THEN
        raise_application_error(
                               -20223,
                               'FK ZMK_CC_C_FKv1 in Table ZMK_CORPORATE_COUPON violates Arc constraint on Table ZMK_COUPON - discriminator column COUPON_TYPE doesn''t have value ''C'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE SEQUENCE ZMK_CUSTOMER_ZMK_CUSTOMER_ID
START WITH 1
    NOCACHE
    ORDER ;

CREATE OR REPLACE TRIGGER ZMK_CUSTOMER_ZMK_CUSTOMER_ID
BEFORE INSERT ON ZMK_CUSTOMER
FOR EACH ROW
WHEN (NEW.ZMK_CUSTOMER_ID IS NULL)
BEGIN
:new.zmk_customer_id := zmk_customer_zmk_customer_id.nextval;

end;
/

CREATE SEQUENCE ZMK_RENTAL_SERVICE_SERVICE_ID
START WITH 1
    NOCACHE
    ORDER ;

CREATE OR REPLACE TRIGGER ZMK_RENTAL_SERVICE_SERVICE_ID
BEFORE INSERT ON ZMK_RENTAL_SERVICE
FOR EACH ROW
WHEN (NEW.SERVICE_ID IS NULL)
BEGIN
:new.service_id := zmk_rental_service_service_id.nextval;

end;
/



-- Oracle SQL Developer Data Modeler Summary Report:
--
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          2
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
--
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
--
-- REDACTION POLICY                         0
--
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
--
-- ERRORS                                   0
-- WARNINGS                                 0
